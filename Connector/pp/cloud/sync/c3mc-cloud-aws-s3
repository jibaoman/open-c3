#!/usr/bin/env /data/Software/mydan/python3/bin/python3
# -*- coding: utf-8 -*-

import sys
import json

import boto3


class S3:
    def __init__(self, account, access_id, access_key, region):
        self.account = account
        self.access_id = access_id
        self.access_key = access_key
        self.region = region
        self.client = self.create_client()

    def create_client(self):
        client = boto3.client(
            "s3",
            aws_access_key_id=self.access_id,
            aws_secret_access_key=self.access_key,
            region_name=self.region,
        )
        return client

    def list_buckets(self):
        response = self.client.list_buckets()
        bucket_list = []
        for bucket_info in response["Buckets"]:
            tags = self.list_tag(
                self.access_id, self.access_key, self.region, bucket_info["Name"])
            bucket = {
                "UUID": "{}-{}-{}".format(self.account, self.region, bucket_info["Name"]),
                "BucketName": bucket_info["Name"],
                "CreationDate": bucket_info["CreationDate"],
                "RegionId": self.region,
                "Tags": tags
            }
            bucket_list.append(bucket)

        return bucket_list

    def list_tag(self, access_id, access_key, region, bucket_name):
        sys.path.append("/data/Software/mydan/Connector/lib/pp")
        from c3mc_cloud_aws_s3_get_tag import GetTag
        return GetTag(access_id, access_key, region, bucket_name).list_tag()

    def show(self):
        bucket_list = self.list_buckets()
        for bucket in bucket_list:
            print(json.dumps(bucket, default=str))


def main(account, access_id, access_key, region):
    S3(account, access_id, access_key, region).show()


if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4])
