#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/AGENT/lib
use strict;
use warnings;

$|++;

use JSON;
use LWP::UserAgent;
use Util;

=head1 SYNOPSIS

 $0
 $0 1;10.60.77.73;清理tmp日志

=cut

my @task;

if( @ARGV )
{
    @task = @ARGV;
}
else
{
    while(<STDIN>){ chomp; push @task, $_; }
}

sub runtask
{
    my (  $id, $instance, $jobname ) = split /;/, shift @_;
    return unless $id && $instance && $jobname;

    my $ua = LWP::UserAgent->new();
    $ua->agent('Mozilla/9 [en] (Centos; Linux)');

    my %env = eval{ Util::envinfo( qw( appkey appname ) )};
    die if $@;

    $ua->default_header( map{ $_ => $env{$_} }qw( appname appkey ) );

    $ua->timeout( 10 );
    $ua->default_header ( 'Cache-control' => 'no-cache', 'Pragma' => 'no-cache' );

    my $url = "http://api.job.open-c3.org/task/0/job/byname";
    my $res = $ua->post( $url,
        Content        => JSON::to_json( +{ jobname => $jobname, group => 'xxx', variable => +{ ip => $instance, _exit_ => 1 } } ),
        'Content-Type' => 'application/json'
    );

    my $cont = $res->content;

    my $data = eval{JSON::from_json $res->content};
    my ( $uuid, $stat ) = ( $data && ref $data eq 'HASH' && $data->{uuid} && $data->{uuid} =~ /^[a-zA-Z0-9]+$/ ) ? ( $data->{uuid}, 'todo' ) : ( 'NULLUUID', 'fail' );
    system "c3mc-base-db-set -t openc3_monitor_self_healing_task $id --set \"taskuuid='$uuid',taskstat='$stat'\"" if $uuid;
}

map{ runtask( $_ )}@task;
