#!/data/Software/mydan/perl/bin/perl
use strict;
use warnings;

$|++;

use YAML::XS;

=head1 SYNOPSIS

 $0

=cut

my @file = <STDIN>;
chomp @file;

sub get
{
    my %has;
    my @ps = `docker ps`;
    chomp @ps;
    my @name = map{ my ( $x )= reverse split /\s+/, $_;$x }@ps;
    map{ $has{$_} = 1 if /^openc3-mongodb-exporter-v3-([a-z0-9\.\-]+-\d+)$/; }@name;
    return %has;
}

my %has = get();

sub run
{
    my ( $file, $has ) = @_;
    my $conf = YAML::XS::LoadFile $file;

    my $name = "openc3-mongodb-exporter-v3-$conf->{ip}-$conf->{port}";

    return if $has->{$name};
    system "docker rm $name >/dev/null 2>&1";

    $conf->{password} =~ s/@/%40/g if defined $conf->{password};
    $conf->{password} =~ s/:/%3a/g if defined $conf->{password};

    my $password = $conf->{user} && $conf->{password} ? "$conf->{user}:$conf->{password}@" : "";
    system "docker run -d --network c3_JobNet --name $name percona/mongodb_exporter:0.35 --mongodb.uri 'mongodb://$password$conf->{ip}:$conf->{port}' --collect-all";
    $has->{$name} = 1;
}

my $default = 10;
my $maxfile = "/data/open-c3-data/mongodb-exporter-v3/max";
system ( "echo $default > $maxfile" ) unless -f $maxfile;
my    $max = `cat $maxfile`;
chomp $max;
$max = $default unless defined $max && $max =~ /^\d+$/;

map{
    exit if $max <= keys %has;
    run( $_, \%has );
} @file;
