#!/data/Software/mydan/perl/bin/perl
use strict;
use warnings;

$|++;

use Encode;
use YAML::XS;
use File::Basename;
use Email::MIME;
use Email::MIME::RFC2047::Decoder;

=head1 SYNOPSIS

 $0

=cut

my $filename = shift @ARGV;
die "no file" unless $filename && -f $filename;

my @x = `cat '$filename'`;
my $email = Email::MIME->new( join "", @x );

my %re = ( 'labels.account' => basename( $filename ) =~ /^([a-zA-Z0-9][a-zA-Z0-9\.\-_]*)\.\d{14}\.\d+\.wait$/ ? $1 : 'unkown' );

for my $part ( $email->parts )
{
    $re{'labels.content'} ||= $part->body_str;
    #当邮件是转发过来的时候 text/plain 里面的内容是 'Reference only'
    $re{'labels.content'}  = $part->body_str if $part->content_type =~ m[text/plain]i && $part->body_str ne 'Reference only';
    $re{'labels.content'}  = $part->body_str if $re{'labels.content'} eq 'Reference only' && $part->body_str ne 'Reference only';
}

$re{'labels.content100'} = $re{'labels.content'};
$re{'labels.content100'} = substr( $re{'labels.content100'}, 0, 100 ) if length $re{'labels.content100'} > 100;

$re{'labels.content100'} = decode('UTF-8', 'html内容，请到邮件中查看全文' ) if $re{'labels.content100'} && $re{'labels.content100'} =~ /^<html>/;

my $decoder = Email::MIME::RFC2047::Decoder->new();

my %d = ( Subject => 'labels.subject', Date => 'labels.date', 'Message-Id' => 'labels.uuid', From => 'labels.from', To => 'labels.to' );
map{ $re{$d{$_}} = $decoder->decode_text($email->header($_)); }keys %d;

$re{'labels.from'} = $1 if $re{'labels.from'} =~ /<([a-zA-Z].+\@.+)>/;
$re{'labels.to'  } = $1 if $re{'labels.to'  } =~ /<([a-zA-Z].+\@.+)>/;

$re{'labels.severity'} = 'level1';
print YAML::XS::Dump \%re;
