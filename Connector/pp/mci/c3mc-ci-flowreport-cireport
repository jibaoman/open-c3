#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/Connector/lib
use strict;
use warnings;

$| ++;

use MYDB;
use YAML::XS;
use MYDan::Util::OptConf;

=head1 SYNOPSIS

 $0 [--since '2022-03-24 00:00:00'] [--until '2022-03-24 23:59:59' ]

=cut
my $option = MYDan::Util::OptConf->load();
my %o = $option->set( since => `date '+%F 00:00:00'`, until => `date '+%F 23:59:59'` )->get( qw( since=s until=s ) )->dump();
chomp $o{since};
chomp $o{until};

my $db = MYDB->new( "/data/Software/mydan/CI/conf/conn", delayedconnection => 1 );

my %groupid;
my $x = eval{ $db->query( "select id,groupid from openc3_ci_project" ) };
die( "mysql query fail: $@" ) if $@;
map{ $groupid{$_->[0]} = $_->[1] }@$x;

my @col = qw( projectid uuid name tagger create_time status );
$x = eval{
     $db->query(
         sprintf( "select %s from openc3_ci_version where create_time>='$o{since}' and create_time<='$o{until}' and pid is not null", join ',', map{"`$_`"}@col),
         \@col
     )
};
die( "mysql query fail: $@" ) if $@;

print YAML::XS::Dump [  map{ +{ 
    groupid   => $groupid{$_->{projectid}},
    uuid      => $_->{ uuid        },
    status    => $_->{ status      },
    time      => $_->{ create_time },
    projectid => $_->{ projectid   },
    version   => $_->{ name        },
    type      => 'ci',
}}@$x ];

my @data;
for my $d ( @$x )
{
    next unless $d->{projectid} && $groupid{$d->{projectid}};
    push @data, +{
        groupid   => $groupid{$d->{projectid}},
        uuid      => $d->{ uuid        },
        status    => $d->{ status      },
        time      => $d->{ create_time },
        projectid => $d->{ projectid   },
        version   => $d->{ name        },
        type      => 'ci',
    };
}

print YAML::XS::Dump \@data;
