#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/Connector/lib
#Resolve user groups
use strict;
use warnings;

use MYDB;

$| ++;

=head1 SYNOPSIS

 $0 usr1 usr2 usr3 .. usrn

 $0 user               # username

 $0 @monitorgroup      # user from monitor group

 $0 %oncallgroup       # oncall user level 1
 $0 %oncallgroup:1     # oncall user level 1
 $0 %oncallgroup:level # oncall user level $level

 $0 :departmentname    # user from department

=cut


my @user;
if( @ARGV ) { @user = @ARGV; } else { while(<STDIN>){ chomp; push @user, $_; } }
exit unless @user;

my ( $dba, $dbc ) = map{ MYDB->new( "/data/Software/mydan/$_/conf/conn", delayedconnection => 1 ) }qw( AGENT Connector );

sub resolve
{
    my ( $user ) = @_;
    return unless $user && $user =~ /^[a-zA-Z0-9\.\-_@%:]+$/;

    if( $user =~ s/^@// )
    {
        my $x = eval{ $dba->query( "select user from openc3_monitor_config_groupuser where groupid in (select id from openc3_monitor_config_group where name='$user')" ); };
        die "$0 get data fail: $@" if $@;
        return map{ @$_ } @$x;
    }

    if( $user =~ s/^%// )
    {
        my $level = $user =~ s/:(\d+)$// ? $1 : 1;
        my @x = `c3mc-oncall-now '$user' -l $level`;
        chomp @x;
        return @x;
    }

    if( $user =~ s/^:// )
    {
        my $x = eval{ $dbc->query( "select user from openc3_connector_userdepartment where department='$user'" ); };
        die "$0 get data fail: $@" if $@;
        return map{ @$_ } @$x;
    }

    return $user;   
}

my %user = map{ $_ => 1 } grep { /^[a-zA-Z0-9][a-zA-Z0-9\.\-_@]*$/ } map{ resolve( $_ ) } map{ resolve( $_ ) } map{ resolve( $_ ) }@user;
map{ print $_, "\n"; }sort keys %user;
