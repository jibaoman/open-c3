#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/Connector/lib -I/data/Software/mydan/Connector/private/lib
use strict;
use warnings;

binmode STDIN,  ':utf8';
binmode STDOUT, ':utf8';
binmode STDERR, ':utf8';

$|++;

use MYDB;
use FindBin qw( $RealBin );
use MYDan::Util::OptConf;
use YAML::XS;
use Encode;

=head1 SYNOPSIS

 $0 sql1 sql2 ... sqln --table foo
 cat foo.sql | ./$0 --table foo

=cut

my $option = MYDan::Util::OptConf->load();
my %o = $option->get(    qw( table=s ) )->dump();
        $option->assert(    'table'    );

my $module = ( split /_/, $o{table} )[1];
my %table = (
    ci        => 'CI',
    job       => 'JOB',
    jobx      => 'JOBX',
    agent     => 'AGENT',
    connector => 'Connector',
    monitor   => 'AGENT',
    device    => 'AGENT',
    tt        => 'Connector',
);

die "table $o{table} undef" unless $module && $table{$module};
my $db = MYDB->new( "/data/Software/mydan/$table{$module}/conf/conn", delayedconnection => 1 );

sub exe
{
    my @x = eval{ $db->execute( shift );};
    die "db exe fail: $@" if $@;
}

if( @ARGV )
{
    map{ exe($_) }@ARGV;
}
else
{
    my @dat;
    while(<STDIN>){ push @dat, $_; }
    exe( join "", @dat );
}
