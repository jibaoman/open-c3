#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/Connector/lib
use strict;
use warnings;

use OPENC3::PP::Server;

=head1 SYNOPSIS

 $0 servername

=cut

$|++;
my $name = shift @ARGV;
my %help = (
    approval  => 'approval oa',
    keepalive => 'server keepalive',
);

unless( $name )
{
    map{ print "\$0 $_ # $help{$_}\n" }keys %help;
    exit;
}

if( $name eq 'approval' )
{
    my $path = "/data/open-c3-data/glusterfs/approval_log";
    system "mkdir -p $path" unless -d $path;
    OPENC3::PP::Server->new(
        name     => "job_server_$name",
        interval => 60,
        timeout  => 120,
    )->run(
      qq( c3mc-base-db-get -t openc3_job_approval id --filter "oauuid='0'                                  and opinion='unconfirmed' and create_time>'`date +%F -d \"15 days ago\"`'" | c3mc-base-task-grep -m job | xargs -i{} bash -c "c3mc-job-approval-create -i {} >$path/create.{} 2>&1 ; exit 0" ),
      qq( c3mc-base-db-get -t openc3_job_approval id --filter "oauuid !='' and oauuid!='0' and oauuid!='1' and opinion='unconfirmed' and create_time>'`date +%F -d \"15 days ago\"`'" | c3mc-base-task-grep -m job | xargs -i{} bash -c "c3mc-job-approval-query  -i {} >$path/query.{}  2>&1 ; exit 0" ),
      qq( c3mc-base-db-get -t openc3_job_approval id --filter "oauuid !='' and oauuid!='0' and oauuid!='1' and ( opinion='agree' or opinion='refuse' ) and oasync='0' and create_time>'`date +%F -d \"15 days ago\"`'" | c3mc-base-task-grep -m job | xargs -i{} bash -c "c3mc-job-approval-sync  -i {} >$path/sync.{}  2>&1 ; exit 0" ),
    );
}

if( $name eq 'keepalive' )
{
    my @x = qx(c3mc-base-db-get id -t openc3_job_keepalive -f "slave='`c3mc-base-hostname`'");
    unless( @x )
    {
        die if system 'c3mc-base-db-ins -t openc3_job_keepalive slave `c3mc-base-hostname` time `date +%s` >/dev/null';
    }
    OPENC3::PP::Server->new(
        name => "job_server_$name",
        interval => 15,
        timeout => 120,
    )->run(
        'c3mc-base-db-set -t openc3_job_keepalive --col slave `c3mc-base-hostname` --set time="`date +%s`" --filter="time<>0" >/dev/null'
    );
}

