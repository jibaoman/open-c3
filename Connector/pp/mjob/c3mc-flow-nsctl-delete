#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/Connector/lib
use strict;
use warnings;

$|++;

use MYDB;
use MYDan::Util::OptConf;

=head1 SYNOPSIS

 $0 --treeid id --dstns dstNamespace

=cut

my $option = MYDan::Util::OptConf->load();
my %o = $option->get( qw( treeid=i dstns=s ) )->dump();
$option->assert(qw( treeid dstns ));

my $dbci   = MYDB->new( "/data/Software/mydan/CI/conf/conn"   );
my $dbjobx = MYDB->new( "/data/Software/mydan/JOBX/conf/conn" );
my $dbjob  = MYDB->new( "/data/Software/mydan/JOB/conf/conn"  );

sub getcis
{
    my ( $treeid, $ns ) = @_;
    my @col = qw( id ); 
    my $r = eval{ $dbci->query( sprintf( "select %s from openc3_ci_project where groupid='$treeid' and ci_type_namespace='$ns'", join( ",", map{"`$_`"}@col) ), \@col ); };   
    die "get ci info fail" unless $r && ref $r eq 'ARRAY';
    return $r;
}

my $dst = getcis( $o{treeid}, $o{dstns} );

sub clean
{
    my ( $treeid, $id ) = @_;
    $dbjobx->execute( "delete from openc3_jobx_group where projectid='$treeid' and name in ('_ci_online_${id}_','_ci_test_${id}_')" );
    $dbjob->execute ( "delete from openc3_job_jobs   where projectid='$treeid' and name='_ci_${id}_'" );
}

map{ clean( $o{treeid}, $_->{id} ) }grep{ $_->{id} && $_->{id} =~ /^\d+$/ }@$dst;

$dbci->execute( "delete from openc3_ci_project where groupid='$o{treeid}' and ci_type_namespace='$o{dstns}'" );
