#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/Connector/lib
use strict;
use warnings;

$|++;

use MYDB;
use MYDan::Util::OptConf;

=head1 SYNOPSIS

 $0 --treeid id --srcid id --dstid id --env [online | test]
 $0 --treeid id --srcid id --dstid id --env [online | test] --dsttreeid treeid

=cut

my $option = MYDan::Util::OptConf->load();
my %o = $option->get( qw( treeid=i srcid=i dstid=i env=s dsttreeid=i ) )->dump();
$option->assert(qw( treeid srcid dstid env ));

my $db = MYDB->new( "/data/Software/mydan/JOBX/conf/conn" );

my @col = qw(
        id
 projectid
      name
      note
group_type
group_uuid
 edit_time
);

sub getcis
{
    my ( $treeid, $id, $env ) = @_;
    my $r = eval{ $db->query( sprintf( "select %s from openc3_jobx_group where projectid='$treeid' and name='_ci_${env}_${id}_'", join( ",", map{"`$_`"}@col) ), \@col ); };   
    die "get ci info fail" unless $r && ref $r eq 'ARRAY';
    return $r->[0];
}

my $src = getcis( $o{treeid}, $o{srcid}, $o{env} );
my $dst = getcis( $o{treeid}, $o{dstid}, $o{env} );

sub save
{
    my ( $row, $id, $env ) = @_;
    delete $row->{id};
    delete $row->{edit_time};
    $row->{name} = "_ci_${env}_${id}_";

    $row->{ projectid } = $o{dsttreeid} if $o{dsttreeid};

    my @c = keys %$row;
    $db->execute( sprintf "insert into openc3_jobx_group (%s) values(%s)",join(',', map{ "`$_`"}@c),join(',',map{ "'$row->{$_}'" }@c) );
}

save( $src, $o{dstid}, $o{env} ) if $src && ! $dst;
